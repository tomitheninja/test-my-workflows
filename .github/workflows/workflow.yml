name: CI Pipeline

on:
  pull_request:
    branches:
      - main
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ISSUE_ENDPOINT: ${{ github.api_url }}/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}
  INITIAL_LABELS: ${{ join(github.event.pull_request.labels.*.name, ' ') }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

permissions:
  issues: write
  pull-requests: write

jobs:
  reset-labels:
    runs-on: [ubuntu-latest]
    steps:
      - name: reset labels
        run: |
          set -xe
          echo "All labels: $INITIAL_LABELS"

          echo "# Removed labels" >> "$GITHUB_STEP_SUMMARY"
          for label in ${INITIAL_LABELS[@]}
          do
            if [[ "$label" == *-force-pass || "$label" == *-pass || "$label" == *-fail ]]; then
              echo "$label" >> "$GITHUB_STEP_SUMMARY"
              curl \
                -X 'DELETE' \
                -H 'Authorization: Bearer ${{ env.GITHUB_TOKEN }}' \
                "${{ env.ISSUE_ENDPOINT }}/labels/$label"
            fi
          done

  # job 1
  job1:
    runs-on: [ubuntu-latest]
    needs: [reset-labels]
    if: ${{ !contains(github.event.pull_request.labels.*.name , 'job1-force-pass') }}
    steps:
      - name: Run job1
        run: |
          set -xe
          echo "Running job1..."

  # job 2: async
  job2_trigger:
    runs-on: [ubuntu-latest]
    needs: [job1]
    if: ${{ ! failure() && !cancelled() && !contains(github.event.pull_request.labels.*.name, 'job2-force-pass') }}
    steps:
      - name: Trigger remote job
        env:
          JENKINS_URL: https://your-jenkins-url.com
          JENKINS_USER: jira-user
          JENKINS_TOKEN: jira-token
        run: |
          set -xe
          echo curl -X POST "${{ env.JENKINS_URL }}/job/your-jenkins-job-name/build" \
            --user "$${{ env.JENKINS_USER }}:${{ env.JENKINS_USER }}"
  job2_poll:
    runs-on: [ubuntu-latest]
    needs: [job2_trigger]
    if: ${{ needs.job2_trigger.result == 'success' }}
    env:
      PASS_LABEL: job2-pass
      FAIL_LABEL: job2-fail
    steps:
      - name: Wait for the job2-pass or job2-fail label
        run: |
          set -xe
          while true; do
              sleep 10
              ALL_LABELS=$(curl -s -H "Authorization: Bearer ${{ env.GITHUB_TOKEN }}" "${{ env.ISSUE_ENDPOINT  }}/labels" | jq -r '.[].name')
              if [[ $ALL_LABELS == *"${{ env.PASS_LABEL }}"* ]]; then
                  echo "job2 passed" >&2
                  exit 0
              elif [[ $ALL_LABELS == *"${{ env.FAIL_LABEL }}"* ]]; then
                echo "job2 failed" >&2
                exit 1
              else
                echo "Waiting for the job2-pass or job2-fail label..."
              fi
          done
      - name: Remove ${{ env.PASS_LABEL }} label
        if: always()
        run: |
          curl -q \
            -X DELETE \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            "$ISSUE_ENDPOINT/labels/${{ env.PASS_LABEL }}"
      - name: Remove ${{ env.FAIL_LABEL }} label
        if: always()
        run: |
          curl -q \
            -X DELETE \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            "$ISSUE_ENDPOINT/labels/${{ env.FAIL_LABEL }}"

  # job 3
  job3:
    runs-on: [ubuntu-latest]
    needs: [job2_poll]
    if: ${{ ! failure() && !cancelled() && !contains(github.event.pull_request.labels.*.name, 'job3-force-pass') }}
    steps:
      - name: Run job3
        run: echo "Running job3..."
